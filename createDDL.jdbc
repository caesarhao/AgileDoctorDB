CREATE TABLE APatientInformation (ID NUMBER(19) NOT NULL, DTYPE VARCHAR(31), acquiringMethod NUMBER(10) NOT NULL, importance NUMBER(10) NOT NULL, name VARCHAR NOT NULL UNIQUE, priority NUMBER(10) NOT NULL, superInformation NUMBER(19), PRIMARY KEY (ID))
CREATE TABLE DialogueSession (ID NUMBER(19) NOT NULL, name VARCHAR NOT NULL UNIQUE, PRIMARY KEY (ID))
CREATE TABLE DoctorActor (ID NUMBER(19) NOT NULL, name VARCHAR NOT NULL UNIQUE, sex NUMBER(1) NOT NULL, PRIMARY KEY (ID))
CREATE TABLE DoctorPhrase (ID NUMBER(19) NOT NULL, effDisturbance NUMBER(10,5) NOT NULL, effTrust NUMBER(10,5) NOT NULL, expression VARCHAR NOT NULL, name VARCHAR NOT NULL UNIQUE, phraseActor BLOB NOT NULL, primitiveType NUMBER(10) NOT NULL, valClarity NUMBER(10,5) NOT NULL, PRIMARY KEY (ID))
CREATE TABLE FamilyInformation (ID NUMBER(19) NOT NULL, PRIMARY KEY (ID))
CREATE TABLE MedicalInformation (ID NUMBER(19) NOT NULL, PRIMARY KEY (ID))
CREATE TABLE MicroSequence (ID NUMBER(19) NOT NULL, name VARCHAR NOT NULL UNIQUE, PRIMARY KEY (ID))
CREATE TABLE PatientActor (ID NUMBER(19) NOT NULL, aggressiveLevel NUMBER(10) NOT NULL, clearLevel NUMBER(10) NOT NULL, confidentLevel NUMBER(10) NOT NULL, longPhraseLevel NUMBER(10) NOT NULL, name VARCHAR NOT NULL UNIQUE, sex NUMBER(1) NOT NULL, PRIMARY KEY (ID))
CREATE TABLE PatientPhrase (ID NUMBER(19) NOT NULL, agressiveLevel NUMBER(10) NOT NULL, clearLevel NUMBER(10) NOT NULL, expression VARCHAR NOT NULL, longLevel NUMBER(10) NOT NULL, name VARCHAR NOT NULL UNIQUE, phraseActor BLOB NOT NULL, primitiveType NUMBER(10) NOT NULL, PRIMARY KEY (ID))
CREATE TABLE Scenario (ID NUMBER(19) NOT NULL, name VARCHAR NOT NULL UNIQUE, PRIMARY KEY (ID))
CREATE TABLE APatientInformation_DoctorPhrase (APatientInformation_ID NUMBER(19) NOT NULL, possibleAskPhrases_ID NUMBER(19) NOT NULL, PRIMARY KEY (APatientInformation_ID, possibleAskPhrases_ID))
CREATE TABLE APatientInformation_PatientPhrase (APatientInformation_ID NUMBER(19) NOT NULL, possibleResponsePhrases_ID NUMBER(19) NOT NULL, PRIMARY KEY (APatientInformation_ID, possibleResponsePhrases_ID))
CREATE TABLE MicroSequence_DialogueSession (MicroSequence_ID NUMBER(19) NOT NULL, dialogueSessions_ID NUMBER(19) NOT NULL, PRIMARY KEY (MicroSequence_ID, dialogueSessions_ID))
CREATE TABLE Scenario_MicroSequence (Scenario_ID NUMBER(19) NOT NULL, microSequences_ID NUMBER(19) NOT NULL, PRIMARY KEY (Scenario_ID, microSequences_ID))
ALTER TABLE APatientInformation ADD CONSTRAINT FK_APatientInformation_superInformation FOREIGN KEY (superInformation) REFERENCES APatientInformation (ID)
ALTER TABLE FamilyInformation ADD CONSTRAINT FK_FamilyInformation_ID FOREIGN KEY (ID) REFERENCES APatientInformation (ID)
ALTER TABLE MedicalInformation ADD CONSTRAINT FK_MedicalInformation_ID FOREIGN KEY (ID) REFERENCES APatientInformation (ID)
ALTER TABLE APatientInformation_DoctorPhrase ADD CONSTRAINT PatientInformationDoctorPhrasePatientInformationID FOREIGN KEY (APatientInformation_ID) REFERENCES APatientInformation (ID)
ALTER TABLE APatientInformation_DoctorPhrase ADD CONSTRAINT PatientInformationDoctorPhrasepossibleAskPhrasesID FOREIGN KEY (possibleAskPhrases_ID) REFERENCES DoctorPhrase (ID)
ALTER TABLE APatientInformation_PatientPhrase ADD CONSTRAINT PtientInformationPatientPhrasePatientInformationID FOREIGN KEY (APatientInformation_ID) REFERENCES APatientInformation (ID)
ALTER TABLE APatientInformation_PatientPhrase ADD CONSTRAINT PtntInformationPatientPhrasepssblResponsePhrasesID FOREIGN KEY (possibleResponsePhrases_ID) REFERENCES PatientPhrase (ID)
ALTER TABLE MicroSequence_DialogueSession ADD CONSTRAINT MicroSequence_DialogueSession_dialogueSessions_ID FOREIGN KEY (dialogueSessions_ID) REFERENCES DialogueSession (ID)
ALTER TABLE MicroSequence_DialogueSession ADD CONSTRAINT FK_MicroSequence_DialogueSession_MicroSequence_ID FOREIGN KEY (MicroSequence_ID) REFERENCES MicroSequence (ID)
ALTER TABLE Scenario_MicroSequence ADD CONSTRAINT FK_Scenario_MicroSequence_microSequences_ID FOREIGN KEY (microSequences_ID) REFERENCES MicroSequence (ID)
ALTER TABLE Scenario_MicroSequence ADD CONSTRAINT FK_Scenario_MicroSequence_Scenario_ID FOREIGN KEY (Scenario_ID) REFERENCES Scenario (ID)
CREATE TABLE SEQUENCE (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT NUMBER(19), PRIMARY KEY (SEQ_NAME))
INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN_IDENTITY', 0)
